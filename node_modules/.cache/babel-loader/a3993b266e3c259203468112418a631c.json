{"ast":null,"code":"import _defineProperty from \"/Users/Lewamey/Desktop/eCom/book-store-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  categories: [],\n  category: {}\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'GET_CURRENT_CATEGORIES':\n      // debugger \n      return _objectSpread({}, state, {\n        categories: action.categories\n      });\n\n    case 'GET_SINGLE_CATEGORY':\n      return _objectSpread({}, state, {\n        category: action.category\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Lewamey/Desktop/eCom/book-store-frontend/src/redux/reducers/categoriesReducer.js"],"names":["initialState","categories","category","reducer","state","action","type"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAKA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,YAAzB,EAAuCK,MAAvC,EAA+C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,wBAAL;AACI;AACA,+BAAWF,KAAX;AAAkBH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAArC;;AAEJ,SAAK,qBAAL;AACI,+BAAWG,KAAX;AAAkBF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAAnC;;AAEJ;AACI,aAAOE,KAAP;AATR;AAWH","sourcesContent":["const initialState = {\n    categories: [],\n    category: {}\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_CURRENT_CATEGORIES':\n            // debugger \n            return {...state, categories: action.categories}\n\n        case 'GET_SINGLE_CATEGORY':\n            return {...state, category: action.category}\n        \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Lewamey/Desktop/final_project/marketplace/frontend-marketplace/src/containers/Cart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CartItem from '../components/CartItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../stylesheet/cart.scss';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapOverCartItems = () => {\n      if (this.current_order()) {\n        return this.current_order().order_items.map(item => {\n          return React.createElement(CartItem, {\n            key: item.id,\n            history: this.props.history,\n            item: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    this.handleClick = () => {\n      this.props.history.push('/shpping-address');\n    };\n  }\n\n  current_order() {\n    if (this.props.user.orders) {\n      return this.props.user.orders.find(order => {\n        console.log(order);\n        return this.props.user.current_order === order.id;\n      });\n    }\n  }\n\n  totalPrice() {\n    if (this.props.user.orders) {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Total Price: \", this.current_order().total_price);\n    }\n  }\n\n  render() {\n    // const order = this.current_order()\n    // debugger\n    // const order_items = order.order_items\n    // console.log(order_items)\n    return React.createElement(\"div\", {\n      className: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cart-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"My Cart\"), this.mapOverCartItems(), React.createElement(\"div\", {\n      className: \"cart-summary-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"total-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.totalPrice()), React.createElement(\"div\", {\n      className: \"checkout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      onClick: this.handleClick,\n      icon: \"arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Next\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.current_site_user\n});\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["/Users/Lewamey/Desktop/final_project/marketplace/frontend-marketplace/src/containers/Cart.js"],"names":["React","Component","connect","CartItem","FontAwesomeIcon","Cart","mapOverCartItems","current_order","order_items","map","item","id","props","history","handleClick","push","user","orders","find","order","console","log","totalPrice","total_price","render","mapStateToProps","state","current_site_user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,yBAAP;;AAGA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAiBzBK,gBAjByB,GAiBN,MAAM;AACrB,UAAI,KAAKC,aAAL,EAAJ,EAA0B;AAC1B,eAAO,KAAKA,aAAL,GAAqBC,WAArB,CAAiCC,GAAjC,CAAsCC,IAAD,IAAU;AAClD,iBAAO,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,YAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAA5C;AAAqD,YAAA,IAAI,EAAEH,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFM,CAAP;AAGH;AACA,KAvBwB;;AAAA,SAyBzBI,WAzByB,GAyBX,MAAM;AAChB,WAAKF,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwB,kBAAxB;AACH,KA3BwB;AAAA;;AAEzBR,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKK,KAAL,CAAWI,IAAX,CAAgBC,MAApB,EAA4B;AACxB,aAAO,KAAKL,KAAL,CAAWI,IAAX,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4BC,KAAK,IAAI;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAO,KAAKP,KAAL,CAAWI,IAAX,CAAgBT,aAAhB,KAAkCY,KAAK,CAACR,EAA/C;AACH,OAHM,CAAP;AAIH;AACJ;;AAEDW,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKV,KAAL,CAAWI,IAAX,CAAgBC,MAApB,EAA4B;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB,KAAKV,aAAL,GAAqBgB,WAAvC,CAAP;AACF;AACJ;;AAcDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAES,KAAKlB,gBAAL,EAFT,EAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKgB,UAAL,EADL,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,KAAKR,WAA/B;AAA4C,MAAA,IAAI,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,CAJJ,CAHJ,CADJ,CADJ;AAgBH;;AAlDwB;;AAqD7B,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACC;AADkB,CAAL,CAA7B;;AAKA,eAAezB,OAAO,CAACuB,eAAD,CAAP,CAAyBpB,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport CartItem from '../components/CartItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../stylesheet/cart.scss'\n\n\nclass Cart extends Component {\n\n    current_order() {\n        if (this.props.user.orders) {\n            return this.props.user.orders.find(order => { \n                console.log(order)\n                return this.props.user.current_order === order.id\n            })\n        }\n    }\n\n    totalPrice() {\n        if (this.props.user.orders) {\n           return <h3>Total Price: {this.current_order().total_price}</h3>\n        }\n    }\n\n    mapOverCartItems = () => {   \n        if (this.current_order()) {     \n        return this.current_order().order_items.map((item) => {\n            return <CartItem key={item.id} history={this.props.history} item={item} />\n        })\n    }\n    }\n\n    handleClick = () => {\n        this.props.history.push('/shpping-address')\n    }\n    \n    render() {  \n        // const order = this.current_order()\n        // debugger\n        // const order_items = order.order_items\n        // console.log(order_items)\n        return (\n            <div className=\"cart-container\">\n                <div className=\"cart-section\">\n                    <h3>My Cart</h3>\n                        {this.mapOverCartItems()}\n                    <div className=\"cart-summary-div\">\n                        <div className=\"total-price\">\n                            {this.totalPrice()}\n                        </div>\n                        <div className=\"checkout-button\">\n                             <FontAwesomeIcon onClick={this.handleClick} icon=\"arrow-right\">Next</FontAwesomeIcon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.current_site_user\n})\n\n\nexport default connect(mapStateToProps)(Cart)"]},"metadata":{},"sourceType":"module"}